// 🔧 修正版：ビデオ再生の安定化（834行目付近を置き換え）

// 既存のリモートビデオを安全に削除
const existingRemoteVideo = document.querySelector(`video[data-user-id="${remoteUID}"]`);
if (existingRemoteVideo) {
  console.log(`🗑️ ${remoteUID}の既存ビデオを削除`);
  // 再生中の場合は停止してから削除
  if (!existingRemoteVideo.paused) {
    existingRemoteVideo.pause();
  }
  existingRemoteVideo.srcObject = null;
  existingRemoteVideo.remove();
}

// 少し待ってから新しいビデオ要素を作成
setTimeout(() => {
  const remoteVideo = document.createElement("video");
  remoteVideo.setAttribute("data-user-id", remoteUID);
  remoteVideo.autoplay = false; // 🔧 重要：autoplayを無効にして手動制御
  remoteVideo.playsInline = true;
  remoteVideo.muted = true;
  remoteVideo.style.width = "200px";
  remoteVideo.style.height = "150px";
  remoteVideo.style.margin = "10px";
  remoteVideo.style.border = "3px solid #00ff00";
  remoteVideo.style.borderRadius = "8px";

  // イベントリスナーを先に設定
  remoteVideo.onloadedmetadata = () => {
    console.log(`📺 ${remoteUID}のメタデータ読み込み完了`);
    console.log(`📺 ビデオサイズ: ${remoteVideo.videoWidth}x${remoteVideo.videoHeight}`);
    
    // メタデータ読み込み後に再生を試行
    remoteVideo.play()
      .then(() => {
        console.log(`✅ ${remoteUID}のビデオ再生成功`);
      })
      .catch(err => {
        console.warn(`⚠️ ${remoteUID}のビデオ再生失敗:`, err);
        // 手動再生ボタンを表示
        showPlayButton(remoteVideo, remoteUID);
      });
  };

  remoteVideo.onplay = () => {
    console.log(`▶️ ${remoteUID}のビデオ再生開始`);
  };

  remoteVideo.onerror = (error) => {
    console.error(`❌ ${remoteUID}のビデオエラー:`, error);
  };

  remoteVideo.oncanplay = () => {
    console.log(`📺 ${remoteUID}のビデオ再生準備完了`);
  };

  // ストリームを設定
  remoteVideo.srcObject = stream;
  
  // DOMに追加
  const videoGrid = document.getElementById("videoGrid");
  videoGrid.appendChild(remoteVideo);
  console.log(`📺 ${remoteUID}のビデオ要素をDOMに追加`);

}, 100); // 100ms待機

// 🔧 手動再生ボタン表示関数
function showPlayButton(videoElement, userId) {
  // 既存のボタンを削除
  const existingButton = document.querySelector(`button[data-play-for="${userId}"]`);
  if (existingButton) {
    existingButton.remove();
  }

  const playButton = document.createElement("button");
  playButton.textContent = `▶️ ${userId}の映像を再生`;
  playButton.setAttribute("data-play-for", userId);
  playButton.style.position = "relative";
  playButton.style.display = "block";
  playButton.style.margin = "10px auto";
  playButton.style.padding = "10px 15px";
  playButton.style.backgroundColor = "#00ff00";
  playButton.style.color = "#000";
  playButton.style.border = "none";
  playButton.style.borderRadius = "5px";
  playButton.style.cursor = "pointer";
  playButton.style.fontSize = "14px";
  playButton.style.fontWeight = "bold";
  
  playButton.onclick = () => {
    videoElement.play()
      .then(() => {
        console.log(`✅ ${userId}の手動再生成功`);
        playButton.remove();
      })
      .catch(err => {
        console.error(`❌ ${userId}の手動再生失敗:`, err);
        alert(`映像の再生に失敗しました: ${err.message}`);
      });
  };
  
  // ビデオ要素の後に挿入
  videoElement.parentNode.insertBefore(playButton, videoElement.nextSibling);
}
